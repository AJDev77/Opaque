<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /lAAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>